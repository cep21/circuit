package simplelogic

import (
	"github.com/cep21/circuit/v3"
	"github.com/cep21/circuit/v3/closers/simplelogic"
)

// generated by goforward github.com/cep21/circuit/v3/closers/simplelogic github.com/cep21/circuit/closers/simplelogic

// ConsecutiveErrOpener is simple closed->open logic that opens on consecutive error counts
type ConsecutiveErrOpener = simplelogic.ConsecutiveErrOpener

// ConsecutiveErrOpenerFactory constructs a new ConsecutiveErrOpener
func ConsecutiveErrOpenerFactory(config ConfigConsecutiveErrOpener) func() circuit.ClosedToOpen {
	return simplelogic.ConsecutiveErrOpenerFactory(config)
}

// ConfigConsecutiveErrOpener configures a ConsecutiveErrOpener
type ConfigConsecutiveErrOpener = simplelogic.ConfigConsecutiveErrOpener
